/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Knowledge Base Setup and Status API endpoints
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';
import { BooleanFromString } from '@kbn/zod-helpers';

/**
 * AI assistant KnowledgeBase.
 */
export type KnowledgeBaseResponse = z.infer<typeof KnowledgeBaseResponse>;
export const KnowledgeBaseResponse = z.object({
  /**
   * Identify the success of the method execution.
   */
  success: z.boolean().optional(),
});

export type KnowledgeBaseSetupRequestQuery = z.infer<typeof KnowledgeBaseSetupRequestQuery>;
export const KnowledgeBaseSetupRequestQuery = z.object({
  /**
      * (Deprecated) ELSER modelId to use when setting up the Knowledge Base. Use `inferenceId` instead. If not provided, a default model will be used.

      */
  modelId: z.string().optional(),
  /**
   * Inference ID to use when setting up the Knowledge Base. If not provided, a default will be used.
   */
  inferenceId: z.string().optional(),
  /**
   * Indicates whether we should or should not install Security Labs docs when setting up the Knowledge Base. Defaults to `false`.
   */
  ignoreSecurityLabs: BooleanFromString.optional().default(false),
});
export type KnowledgeBaseSetupRequestQueryInput = z.input<typeof KnowledgeBaseSetupRequestQuery>;

export type KnowledgeBaseSetupResponse = z.infer<typeof KnowledgeBaseSetupResponse>;
export const KnowledgeBaseSetupResponse = KnowledgeBaseResponse;

export type KnowledgeBaseStatusResponse = z.infer<typeof KnowledgeBaseStatusResponse>;
export const KnowledgeBaseStatusResponse = z.object({
  /**
   * (Deprecated) Indicates if the ELSER model exists for the Knowledge Base. See inference_endpoint_exists instead.
   */
  elser_exists: z.boolean().optional(),
  /**
   * Indicates if the Inference Endpoint is available for the Knowledge Base.
   */
  inference_endpoint_exists: z.boolean().optional(),
  /**
   * Indicates if the setup process is available for the Knowledge Base.
   */
  is_setup_available: z.boolean().optional(),
  /**
   * Indicates if the setup process is currently in progress.
   */
  is_setup_in_progress: z.boolean().optional(),
  /**
   * Indicates if Security Labs documentation exists in the Knowledge Base.
   */
  security_labs_exists: z.boolean().optional(),
  /**
   * Indicates if Defend Insights documentation exists in the KnowledgeBase.
   */
  defend_insights_exists: z.boolean().optional(),
  /**
   * Indicates if user data exists in the Knowledge Base.
   */
  user_data_exists: z.boolean().optional(),
  /**
   * The status of the product documentation in the Knowledge Base.
   */
  product_documentation_status: z.string().optional(),
});
